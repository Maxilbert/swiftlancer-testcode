from utils import connect_web3 as connect
from web3 import Web3
from ethereum.utils import (
    int_to_bytes, sha3
)

def enc_one(r):
    c_1 = pow(g, r, p)
    c_2 = pow(h, r, p)
    c_2 = c_2 * g % p
    return c_1, c_2


def enc_zero(r):
    c_1 = pow(g, r, p)
    c_2 = pow(h, r, p)
    return c_1, c_2


def enc(m, r):
    c_1 = pow(g, r, p)
    c_2 = pow(h, r, p) * pow(g, m, p) % p
    return c_1, c_2

def is_zero(c_1, c_2, k):
    return pow(c_1, k, p) == c_2


def is_one(c_1, c_2, k):
    return pow(c_1, k, p) * g % p == c_2


def count_bitlen(x):
    x_str = str(hex(x)).replace('0x', '')
    charlen = len(x_str)
    bitlen = charlen * 4
    if x_str[0] in ['1']:
        bitlen -= 3
    elif x_str[0] in ['2', '3']:
        bitlen -= 2
    elif x_str[0] in ['4', '5', '6', '7']:
        bitlen -= 1
    return bitlen


if __name__ == '__main__':



    abi = '[{"constant":false,"inputs":[{"name":"c1_val","type":"bytes"},{"name":"c1_bitlen","type":"uint256"},{"name":"c2_val","type":"bytes"},{"name":"c2_bitlen","type":"uint256"},{"name":"k_val","type":"bytes"},{"name":"k_bitlen","type":"uint256"}],"name":"dispute_handling","outputs":[{"name":"","type":"bool"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"inputs":[],"payable":false,"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":false,"name":"msg","type":"string"}],"name":"Decryption","type":"event"}]'
    bin = '0x60806040523480156200001157600080fd5b5060608060a060405190810160405280608081526020017fda04e8c7457591a5f303377378fdf9777bc7f9bb2957458b40107605692fd8a981526020017f38e34c8cc0f63486d375ffc9f17ff170c06b1d9d4d6c40d16bc34b5f145f365981526020017f8c987c624d60c25335b258460f1dcaaa15df44e1c8dff6b556fa5283198956f481526020017f864dbca5ff6a2cb02f551a6e17c45e9efc0b540f21c36d56d6763a188459d8fb815250915060a060405190810160405280608081526020017f447da3cd62f803c191a7f65e91e582a2c56002c59c6205676b561b7e43dee69d81526020017f889e8a7e4e22cb6ca321f7f0ff29005d1b7aca5f0afa26f88e6bce1d2b4503c881526020017f9ff55640b109eb0ceb6b304c8d1f0b3015d5f656a49df24aae9daeabf06085bf81526020017f3b554dc5628fc3a4b0b1d3849ae8530a415219818afadccc05e40c0c9e19b3418152509050606060405190810160405280838152602001600015158152602001610400815250600080820151816000019080519060200190620001ab92919062000250565b5060208201518160010160006101000a81548160ff021916908315150217905550604082015181600201559050506060604051908101604052808281526020016000151581526020016103ff815250600360008201518160000190805190602001906200021a92919062000250565b5060208201518160010160006101000a81548160ff021916908315150217905550604082015181600201559050505050620002ff565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106200029357805160ff1916838001178555620002c4565b82800160010185558215620002c4579182015b82811115620002c3578251825591602001919060010190620002a6565b5b509050620002d39190620002d7565b5090565b620002fc91905b80821115620002f8576000816000905550600101620002de565b5090565b90565b61173e806200030f6000396000f300608060405260043610610041576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff1680632c4d6ba114610046575b600080fd5b34801561005257600080fd5b50610157600480360381019080803590602001908201803590602001908080601f016020809104026020016040519081016040528093929190818152602001838380828437820191505050505050919291929080359060200190929190803590602001908201803590602001908080601f016020809104026020016040519081016040528093929190818152602001838380828437820191505050505050919291929080359060200190929190803590602001908201803590602001908080601f016020809104026020016040519081016040528093929190818152602001838380828437820191505050505050919291929080359060200190929190505050610171565b604051808215151515815260200191505060405180910390f35b600061017b6116ee565b6101836116ee565b61018b6116ee565b6101936116ee565b61019b6116ee565b8b85600001819052508a85604001818152505060008560200190151590811515815250508984600001819052508884604001818152505060008460200190151590811515815250508783600001819052508683604001818152505060008360200190151590811515815250506102f083600060606040519081016040529081600082018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156102b25780601f10610287576101008083540402835291602001916102b2565b820191906000526020600020905b81548152906001019060200180831161029557829003601f168201915b505050505081526020016001820160009054906101000a900460ff161515151581526020016002820154815250508761071f9092919063ffffffff16565b91506105976103de84600060606040519081016040529081600082018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156103a05780601f10610375576101008083540402835291602001916103a0565b820191906000526020600020905b81548152906001019060200180831161038357829003601f168201915b505050505081526020016001820160009054906101000a900460ff161515151581526020016002820154815250508861071f9092919063ffffffff16565b600060606040519081016040529081600082018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156104855780601f1061045a57610100808354040283529160200191610485565b820191906000526020600020905b81548152906001019060200180831161046857829003601f168201915b505050505081526020016001820160009054906101000a900460ff16151515158152602001600282015481525050600360606040519081016040529081600082018054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561055a5780601f1061052f5761010080835404028352916020019161055a565b820191906000526020600020905b81548152906001019060200180831161053d57829003601f168201915b505050505081526020016001820160009054906101000a900460ff161515151581526020016002820154815250506107ea9092919063ffffffff16565b905060006105a78386600161080e565b141561061e577f13a0665e4950079abe80f3757ce36547e7a8e42dbf7f8d935ebde928afd90e5960405180806020018281038252600c8152602001807f74686973206973207a65726f000000000000000000000000000000000000000081525060200191505060405180910390a160009550610710565b600061062c8286600161080e565b14156106a3577f13a0665e4950079abe80f3757ce36547e7a8e42dbf7f8d935ebde928afd90e5960405180806020018281038252600b8152602001807f74686973206973206f6e6500000000000000000000000000000000000000000081525060200191505060405180910390a160009550610710565b7f13a0665e4950079abe80f3757ce36547e7a8e42dbf7f8d935ebde928afd90e596040518080602001828103825260148152602001807f6e656974686572207a65726f206e6f72206f6e6500000000000000000000000081525060200191505060405180910390a1600195505b50505050509695505050505050565b6107276116ee565b606060008015158560200151151514151561074157600080fd5b6107588660000151866000015186600001516109c7565b91506020820151905061010060016020845181151561077357fe5b04030261077f82610a99565b019050818360000181905250600015158660200151151514806107b75750856020015180156107b6575060006107b486610cea565b145b5b6107c25760016107c5565b60005b8360200190151590811515815250508083604001818152505082925050509392505050565b6107f26116ee565b6108056107ff8585610cff565b83610d61565b90509392505050565b6000806000806000806000806001965088156108e0578a602001518015610836575089602001515b15610863577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff96506108df565b600015158b6020015115151480156108835750600115158a602001511515145b1561089157600197506109b9565b600115158b6020015115151480156108b15750600015158a602001511515145b156108de577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff97506109b9565b5b5b89604001518b6040015111156108fb578660010297506109b9565b8a604001518a60400151111561093557867fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0297506109b9565b8a6000015151915060208b5101955060208a51019450600090505b818110156109b45780860151935080850151925082841115610977578660010297506109b9565b838311156109a957867fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0297506109b9565b602081019050610950565b600097505b505050505050509392505050565b606083518351835160405183815282602082015281604082015283606082018560208b0160046101c2fa84606001848184018660208c0160046101c2fa91508481019050838184018560208b0160046101c2fa91508160008114610a2a57610a2c565bfe5b5083810190508383606001828560056105465a03fa91508160008114610a5157610a53565bfe5b5083836060015b600160008251141415610a7857602081019050602082039150610a5a565b60208103985081895285856060010160405250505050505050509392505050565b60008082905060018303925060028304831792506004830483179250601083048317925061010083048317925062010000830483179250640100000000830483179250680100000000000000008304831792507001000000000000000000000000000000008304831792506001830192506040517ff8f9cbfae6cc78fbefe7cdc3a1793dfcf4f0e8bbd8cec470b6a28a7a5a3e1efd81527ff5ecf1b3e9debc68e1d9cfabc5997135bfb7a7a3938b7b606b5b4b3f2f1f0ffe60208201527ff6e4ed9ff2d6b458eadcdf97bd91692de2d4da8fd2d0ac50c6ae9a827252361660408201527fc8c0b887b0a8a4489c948c7f847c6125746c645c544c444038302820181008ff60608201527ff7cae577eec2a03cf3bad76fb589591debb2dd67e0aa9834bea6925f6a4a2e0e60808201527fe39ed557db96902cd38ed14fad815115c786af479b7e8324736353433727170760a08201527fc976c13bb96e881cb166a933a55e490d9d56952b8d4e801485467d236242260660c08201527f753a6d1b65325d0c552a4d1345224105391a310b29122104190a11030902010060e082015261010081016040527e818283848586878898a8b8c8d8e8f929395969799a9b9d9e9faaeb6bedeeff7f01000000000000000000000000000000000000000000000000000000000000008082870204818160ff038501510495507f800000000000000000000000000000000000000000000000000000000000000085116101000286019550505050506000600182038216148015610cd8575060008314155b15610ce4578160010191505b50919050565b60008151518251016002815106915050919050565b610d076116ee565b610d0f6116ee565b610d1b84846000610dbd565b91506000610d2b8585600161080e565b141515610d4d57610d3e84846001610dbd565b9050610d4a8282610ed4565b91505b610d5882600261112a565b91505092915050565b610d696116ee565b610d716116ee565b6060604051908101604052806040805190810160405280602081526020016001815250815260200160001515815260200160018152509050610db484828561071f565b91505092915050565b610dc56116ee565b610dcd6116ee565b60008060606000610ddc6116ee565b60606040519081016040528060408051908101604052806020815260200160028152508152602001600015158152602001600281525095506000945060008814610e2f57610e2a8a8a610ed4565b610e3a565b610e398a8a61120a565b5b96508660400151915060028202945061010085811515610e5657fe5b0660019060020a029350604080519081016040528060208152602001600081525092506020600161010087040102835283602084015260208351018301604052828160000181905250600081602001901515908115158152505084816040018181525050610ec587878361071f565b96505050505050509392505050565b610edc6116ee565b610ee46116ee565b60606000806060604051908101604052806040805190810160405280602081526020016000815250815260200160001515815260200160008152509350610f2d8787600061080e565b9150866020015180610f40575085602001515b156110715786602001518015610f57575085602001515b15610ffb576001821415610f9557610f778760000151876000015161146a565b80925081945050506001856020019015159081151581525050610ff6565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610fed57610fcf8660000151886000015161146a565b80925081945050506000856020019015159081151581525050610ff5565b839450611120565b5b61106c565b6000821215156110295761101c87600001518760000151896040015161157b565b8092508194505050611049565b61104086600001518860000151886040015161157b565b80925081945050505b866020015161105957600061105c565b60015b8560200190151590811515815250505b61110c565b60018214156110aa5761108c8760000151876000015161146a565b8092508194505050600085602001901515908115158152505061110b565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415611102576110e48660000151886000015161146a565b8092508194505050600185602001901515908115158152505061110a565b839450611120565b5b5b828560000181905250808560400181815250505b5050505092915050565b6111326116ee565b60606000806000806000806000896101000395508a6000015151915060206000039250818b510193506020820390505b828110156111b557835196506000811460018114611186576020850351955061118b565b600095505b5089879060020a9004965085859060020a0294508487178452602084039350602081039050611162565b6020840193505b6000845114156111d7576020840193506020820391506111bc565b602084039750818852878b60000181905250898b60400151038b60400181815250508a9850505050505050505092915050565b6112126116ee565b61121a6116ee565b606060008060606040519081016040528060408051908101604052806020815260200160008152508152602001600015158152602001600081525093506000876040015114801561126f575060008660400151145b1561127c57839450611460565b60008760400151141561129157859450611460565b6000866040015114156112a657869450611460565b6112b28787600061080e565b90508660200151806112c5575085602001515b156113ec57866020015180156112dc575085602001515b156113455760008112151561130f5761130287600001518760000151896040015161157b565b809350819450505061132f565b61132686600001518860000151886040015161157b565b80935081945050505b60018560200190151590811515815250506113e7565b6001811415611381576113608760000151876000015161146a565b809350819450505086602001518560200190151590811515815250506113e6565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8114156113dd576113bb8660000151886000015161146a565b80935081945050508660200151158560200190151590811515815250506113e5565b839450611460565b5b5b61144c565b60008112151561141a5761140d87600001518760000151896040015161157b565b809350819450505061143a565b61143186600001518860000151886040015161157b565b80935081945050505b60008560200190151590811515815250505b828560000181905250818560400181815250505b5050505092915050565b6060600060606000806000915059600160000388518851808203828c01828c0184870160208101865b60008082141415611524578451868211600181146114d5578d8203855260018e146000831416600181146114ca5760009e506114cf565b60019e505b5061150b565b85518e81840303865260018f148c8214168f8201841017600181146114fd5760009f50611502565b60019f505b50602087039650505b5060208403935060208603955050602081039050611493565b506020820191505b60008251141561154d5760208901985060208703965060208201915061152c565b889b50868c5280604052505050505050505050611569836116ca565b90508281945094505050509250929050565b6060600060606000596001600003600089518a0189518a018b5160208601018c515b6000808214141561164a5783518d518f51038211600181146115e25786820184526001871482891416600181146115d757600097506115dc565b600197505b50611631565b8451878184010185528781038903831160018114611623576000821160008a11178a85141660018114611618576000995061161d565b600199505b50611628565b600198505b50602086039550505b506020830392506020850394505060208103905061159d565b5060008414600181146116605760018252611667565b6020870196505b50859750836020028d51018852602088510188016040525050505050506020820151905060016101008681151561169a57fe5b06829060020a900414806116ae5750600181145b156116ba578460010194505b8185935093505050935093915050565b6000806020830151905060086020845103026116e582610a99565b01915050919050565b606060405190810160405280606081526020016000151581526020016000815250905600a165627a7a7230582019a3e41d6b9d1c10e8fea742ca6a589232347a8ef5eee0aca783c4b0e4bf3e280029'
    addr = Web3.toChecksumAddress('0x9fB2BCc7A28cA0e434A0aa7777003A1815E45BD2')

    web3, pwd = connect()
    contract = web3.eth.contract(abi=abi, bytecode=bin, address=addr)


    # 2048-bit
    # p = 137705293650458603098429250390690365188633898356869024960401337518511318335985577294916513334907050929637756567924857831553054872085388089004254850956082759470075072041587273818903839771015499675558152950137708947910440870318040824089951497590105645977794746227751644337370912314394038809695986844350982063027
    # g = 93082218599800896018745958716178926211527913985123711054105180570161639147694652510562055110430963392727661611508875849869762337882723438963805748323248996624438370136294676249252530442517013628282861525229752760756446118384517991645088302693105831120361145936734173495940070901557011134752972723473575747899
    # x = 62555713279948745690349351610356531327032351353192320967421937635293378693946211592624820108119998277825391232074589514501649650827908709815124457628347900961038658650480217718807650468597580969342931489490635246791126151937259525476850522897096329798193623331012272552762850181502944812071200771862243846107

    # 1024-bit
    p = 153098272504387072266936256155440771844922582242861823323292219309209807318109992190455717597749270325963123403359939192028947724926144342818770586136136126337375436706876614423863264051678326206739626203872223116203206738831155125839612432933059096643057013804321361170650382385182136069811475540151279147259
    g = 48095861804730928538428071688224004229592704416264787635743716356958582448226167154685924895443220005707859651277553435409220536317215422963672871914841517783042349761227906722244783116777179995820326154186287286353935949308174273056377987690394866714089833749644657555907806410435558837920979345110898160449
    k = 10022446701738583271276071804010446073913280425189472942303437612418862851223244723245226017322005926246813100742541609377103046893136104044015161562561526985453585647020566093167977121428923628169372925889701872928538625011078052920813557913682354018653924330859466163743103828247525446549945542160664745508


    h = pow(g, k, p)

    r = 62555713279948745690349351610356531327032351353192320967421937635293378693946211592624820108119998277825391232074589514501649650827908709815124457628347900961038658650480217718807650468597580969342931489490635246791126151937259525476850522897096329798193623331012272552762850181502944812071200771862243846107

    print('p: ', hex(p))
    print('p_bitlen: ', count_bitlen(p))
    print('g: ', hex(g))
    print('g_bitlen: ', count_bitlen(g))
    print('k: ', hex(k))
    print('k_bitlen: ', count_bitlen(k))
    print('h: ', hex(h))
    print('h_bitlen: ', count_bitlen(h))


    c_1, c_2 = enc_zero(r)
    print('c_1: ', hex(c_1))
    print('c_1_bitlen: ', count_bitlen(c_1))
    print('c_2: ', hex(c_2))
    print('c_2_bitlen: ', count_bitlen(c_2))
    print(is_zero(c_1, c_2, k))
    print(is_one(c_1, c_2, k))

    dispute_handling = contract.functions.dispute_handling(int_to_bytes(c_1), count_bitlen(c_1), int_to_bytes(c_2), count_bitlen(c_2), int_to_bytes(k), count_bitlen(k))
    gas = dispute_handling.estimateGas()
    tx_hash = dispute_handling.transact({'gas': gas})
    print(web3.toHex(tx_hash))
    tx_receipt = web3.eth.waitForTransactionReceipt(tx_hash)
    print(tx_receipt)

    c_1, c_2 = enc_one(r)
    print('c_1: ', hex(c_1))
    print('c_1_bitlen: ', count_bitlen(c_1))
    print('c_2: ', hex(c_2))
    print('c_2_bitlen: ', count_bitlen(c_2))
    print(is_zero(c_1, c_2, k))
    print(is_one(c_1, c_2, k))

    dispute_handling = contract.functions.dispute_handling(int_to_bytes(c_1), count_bitlen(c_1), int_to_bytes(c_2), count_bitlen(c_2), int_to_bytes(k), count_bitlen(k))
    gas = dispute_handling.estimateGas()
    tx_hash = dispute_handling.transact({'gas': gas})
    print(web3.toHex(tx_hash))
    tx_receipt = web3.eth.waitForTransactionReceipt(tx_hash)
    print(tx_receipt)

    c_1, c_2 = enc(3, r)
    print('c_1: ', hex(c_1))
    print('c_1_bitlen: ', count_bitlen(c_1))
    print('c_2: ', hex(c_2))
    print('c_2_bitlen: ', count_bitlen(c_2))
    print(is_zero(c_1, c_2, k))
    print(is_one(c_1, c_2, k))

    dispute_handling = contract.functions.dispute_handling(int_to_bytes(c_1), count_bitlen(c_1), int_to_bytes(c_2), count_bitlen(c_2), int_to_bytes(k), count_bitlen(k))
    gas = dispute_handling.estimateGas()
    tx_hash = dispute_handling.transact({'gas': gas})
    print(web3.toHex(tx_hash))
    tx_receipt = web3.eth.waitForTransactionReceipt(tx_hash)
    print(tx_receipt)
